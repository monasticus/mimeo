[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mimeograph"
version = "0.4.2"
description = "Generate data based on a simple template"
readme = "README.md"
authors = [{ name = "T.A. Programming Svcs.", email = "tomasz.maciej.aniolowski@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Topic :: Database",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]
keywords = ["mimeograph", "mimeo", "generate", "generator"]
dependencies = [
    "requests",
    "pandas",
    "pyyaml",
    "haggis"
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = ["bumpver", "build", "twine", "pylama", "isort", "pytest", "pytest-cov", "responses"]
test = ["pylama", "pytest", "pytest-cov", "responses"]

[project.scripts]
mimeo = "mimeo.__main__:main"

[tool.bumpver]
current_version = "0.4.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "Bump version {old_version} to {new_version}"
commit          = true
tag             = true
push            = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/mimeo/__init__.py" = ["{version}"]
"src/mimeo/cli/parsers.py" = ["{version}"]

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    # Don't complain if non-runnable code isn't run:
    "if __name__ == '__main__':",
    # Don't complain about abstract methods, they aren't run:
    "raise NotImplementedError"
]

[tool.isort]
skip_glob=[
    # Disable imports' sorting when the import order is important
    "src/mimeo/cli/__init__.py",
    "src/mimeo/consumers/__init__.py",
    "src/mimeo/context/__init__.py",
    "src/mimeo/generators/__init__.py"
]

[tool.pylama]
async = true
linters = "mccabe,pycodestyle,pydocstyle,pyflakes"

[tool.pylama.linter.pydocstyle]
convention = "numpy"

[[tool.pylama.files]]
path = "*/__init__.py"
ignore = "W0611"

[[tool.pylama.files]]
path = "tests/*"
linters = "mccabe,pycodestyle,pyflakes"
